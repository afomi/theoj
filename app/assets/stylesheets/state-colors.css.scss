// @import 'variables';

// Issue States
$oj-issue-states-fg: (
        unresolved: #6b711c,
        resolved:   #0D47A1,
        disputed:   #a42d25,
        new:        #e0e000,
);
$oj-issue-states-bg: (
        unresolved: #d3df38,
        resolved:   #146efc,
        disputed:   #fe4539,
        new:        #e0e0a0,
);

// Paper states? / actions

$oj-paper-states-bg: (
        submitted:       #ffd6da,
        under_review:    #ffffc8,
        accepted:        #dcffdc,
        rejected:        #ffd6da,
        superceded:      #ffb4ef,
);

$oj-paper-actions-bg: (
        needs-attention: #ffd6da,
        in-process:      #ffffc8,
        accepted:        #dcffdc,
        rejected:        #ffd6da,
);

// User roles
$oj-paper-roles-bg: (
        author:       #ffffa5,  // yellow
        submittor:    #ffffa5,  // yellow
        collaborator: #ff87f8,  // purple
        reviewer:     #7fc97f,  // green
        editor:       #fdc086,  // orange-red
);
$oj-paper-roles-fg: (
        author:       #e4e400,    // yellow
        submittor:    #e4e400,    // yellow
        collaborator: purple,     // purple
        reviewer:     green,      // green
        editor:       orangered,  // orange-red
);

body /deep/ {

  oj-annotation-marker {

    &::shadow core-icon {

      @each $state, $fg in $oj-issue-states-fg {
        &.state-#{$state} {
          stroke: map-get($oj-issue-states-fg, $state);
          fill:   map-get($oj-issue-states-bg, $state);
        }
      }

    }

  }

  oj-annotation {

    &::shadow .container {

      @each $state, $fg in $oj-issue-states-fg {
        &.state-#{$state} {
          border-top-color: $fg;
        }
      }

    }

  }

  oj-paper-row {

    &::shadow {

      @each $action, $bg in $oj-paper-actions-bg {
        .action-#{$action} {
          background-color: $bg;
        }
      }

    }

  }

  oj-review-page-header {

    &::shadow {

      @each $role, $bg in $oj-paper-roles-bg {
        .role-#{$role} {
          background-color: $bg;
        }
      }

      @each $state, $bg in $oj-paper-states-bg {
        .state-#{$state} {
          background-color: $bg;
        }
      }

    }

  }

  oj-user-label {

      @each $role, $color in $oj-paper-roles-fg {
        &.role-#{$role} {
          border-top-color: $color;
        }
      }

  }

  oj-user-tag {

    @each $role, $color in $oj-paper-roles-fg {
      &.role-#{$role} {
        background-color: $color !important;
      }
    }

  }

}